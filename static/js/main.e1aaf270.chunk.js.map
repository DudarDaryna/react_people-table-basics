{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","api/getPeopleFromServer.ts","App.tsx","index.tsx"],"names":["HomePage","className","PersonRow","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","person","PeoplePage","useState","setPeople","hasError","setHasError","useAsyncEffect","a","fetch","then","response","json","peopleFromServer","App","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"kNAAaA,EAAW,kBACtB,oBAAIC,UAAU,aAAd,wB,+DCCWC,EAA6B,SAAC,GAOpC,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,IACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEA,OACE,+BACE,6BAAKL,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,GAAc,YACnB,6BAAKC,GAAc,gBCXZC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC1C,qBAAKT,UAAU,UAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGS,EAAOC,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAEMA,GADCA,EAAOT,iBChBXU,EAAa,WACxB,MAA4BC,mBAA0B,MAAtD,mBAAOJ,EAAP,KAAeK,EAAf,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAaA,OAXAC,IAAc,sBAAC,4BAAAC,EAAA,+ECPRC,MAHG,qEAIPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDMd,OAELC,EAFK,OAIXP,GAAY,GACZF,EAAUS,GALC,gDAOXP,GAAY,GAPD,yDASZ,IAGD,sBAAKhB,UAAU,aAAf,UACE,oBAAIA,UAAU,aAAd,yBAECe,GACC,mBAAGf,UAAU,gBAAb,8BAKDS,GAAU,cAAC,EAAD,CAAaA,OAAQA,QEAvBe,G,MAxBH,kBACV,qBAAKxB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,qBAAKA,UAAU,0BAAf,SACE,qBAAIA,UAAU,cAAd,UACE,6BACE,cAAC,IAAD,CAASyB,GAAG,IAAIzB,UAAU,cAA1B,oBAEF,6BACE,cAAC,IAAD,CAASyB,GAAG,UAAUzB,UAAU,cAAhC,6BAMR,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0B,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,gBCpBvCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e1aaf270.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h2 className=\"title is-3\">Home page</h2>\n);\n","type Props = Person;\n\nexport const PersonRow: React.FC<Props> = ({\n  name,\n  sex,\n  born,\n  died,\n  motherName,\n  fatherName,\n}) => {\n  return (\n    <tr>\n      <th>{name}</th>\n      <th>{sex}</th>\n      <th>{born}</th>\n      <th>{died}</th>\n      <th>{motherName || 'Unknown'}</th>\n      <th>{fatherName || 'Unknown'}</th>\n    </tr>\n  );\n};\n","import { PersonRow } from '../PersonRow/PersonRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <div className=\"content\">\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => (\n          <PersonRow\n            key={person.name}\n            {...person}\n          />\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n","import { useState } from 'react';\nimport useAsyncEffect from 'use-async-effect';\n\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { getPeopleFromServer } from '../../api/getPeopleFromServer';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [hasError, setHasError] = useState(false);\n\n  useAsyncEffect(async () => {\n    try {\n      const peopleFromServer = await getPeopleFromServer();\n\n      setHasError(false);\n      setPeople(peopleFromServer);\n    } catch (error) {\n      setHasError(true);\n    }\n  }, []);\n\n  return (\n    <div className=\"PeoplePage\">\n      <h2 className=\"title is-3\">People page</h2>\n\n      {hasError && (\n        <p className=\"error-message\">\n          Some troubles ;(\n        </p>\n      )}\n\n      {people && <PeopleTable people={people} />}\n    </div>\n  );\n};\n","const URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeopleFromServer = () => {\n  return fetch(URL)\n    .then(response => response.json());\n};\n","import { Routes, Route, NavLink } from 'react-router-dom';\n\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <div className=\"container\">\n      <header className=\"Header\">\n        <nav className=\"navbar block has-shadow\">\n          <ul className=\"navbar-menu\">\n            <li>\n              <NavLink to=\"/\" className=\"navbar-item\">Home</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/people\" className=\"navbar-item\">People</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage />} />\n      </Routes>\n    </div>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}